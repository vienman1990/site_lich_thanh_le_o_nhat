<!-- Import maps -->
  <script type="importmap">
  {
    "imports": {
      "three": "https://unpkg.com/three@0.160.0/build/three.module.js",
      "three/addons/": "https://unpkg.com/three@0.160.0/examples/jsm/"
    }
  }
  </script>

  <script type="module">
    import * as THREE from 'three';

    const container = document.getElementById('app');
    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
    renderer.setPixelRatio(Math.min(devicePixelRatio, 2));
    renderer.setSize(container.clientWidth, container.clientHeight);
    renderer.shadowMap.enabled = true;
    container.appendChild(renderer.domElement);

    // Scene + Camera
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(
      50,
      container.clientWidth / container.clientHeight,
      0.1,
      100
    );
    camera.position.set(0, 2, 8);

    // Lights
    scene.add(new THREE.AmbientLight(0xffffff, 1.5));
    const dir = new THREE.DirectionalLight(0xffffff, 2);
    dir.position.set(5, 8, 3);
    dir.castShadow = true;
    scene.add(dir);

    // Cross geometry
    const h = 5, t = 0.6, armW = 3.2, armY = 0.15 * h;
    const material = new THREE.MeshStandardMaterial({
      color: 0x009966, roughness: 0.55, metalness: 0.05
    });

    const vertical = new THREE.Mesh(new THREE.BoxGeometry(t, h, t), material);
    vertical.castShadow = true;
    const horizontal = new THREE.Mesh(new THREE.BoxGeometry(armW, t, t), material);
    horizontal.position.y = armY;
    horizontal.castShadow = true;

    const cross = new THREE.Group();
    cross.add(vertical, horizontal);
    cross.position.y = h * 0.5 - 0.5;
    scene.add(cross);

    // Mouse tilt
    let targetRotX = 0, targetRotY = 0;
    const maxTilt = 0.5; // ~10°
    window.addEventListener('mousemove', e => {
      const nx = (e.clientX / window.innerWidth) * 2 - 1;   // [-1,1]
      const ny = (e.clientY / window.innerHeight) * 2 - 1;  // [-1,1]
      targetRotY = nx * maxTilt;
      targetRotX = ny * maxTilt;
    });

    function animate() {
      requestAnimationFrame(animate);

      // lerp cho mượt
      cross.rotation.x += (targetRotX - cross.rotation.x) * 0.05;
      cross.rotation.y += (targetRotY - cross.rotation.y) * 0.05;

      renderer.render(scene, camera);
    }
    animate();

    // Resize
    window.addEventListener('resize', () => {
      camera.aspect = container.clientWidth / container.clientHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(container.clientWidth, container.clientHeight);
    });
  </script>

<div class="py-10 flex justify-center">
  <div class=" relative">
    <a href="/" class=" absolute inset-0"></a>
    <div id="app" class="block size-52"></div>
  </div>
</div>